/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Directive, ElementRef, Renderer2, HostBinding, ChangeDetectorRef } from '@angular/core';
import { SliderElementDirective } from './slider-element.directive';
import * as ɵngcc0 from '@angular/core';
var SliderHandleDirective = /** @class */ (function (_super) {
    tslib_1.__extends(SliderHandleDirective, _super);
    function SliderHandleDirective(elemRef, renderer, changeDetectionRef) {
        var _this = _super.call(this, elemRef, renderer, changeDetectionRef) || this;
        _this.active = false;
        _this.role = '';
        _this.tabindex = '';
        _this.ariaOrientation = '';
        _this.ariaLabel = '';
        _this.ariaLabelledBy = '';
        _this.ariaValueNow = '';
        _this.ariaValueText = '';
        _this.ariaValueMin = '';
        _this.ariaValueMax = '';
        return _this;
    }
    /**
     * @return {?}
     */
    SliderHandleDirective.prototype.focus = /**
     * @return {?}
     */
    function () {
        this.elemRef.nativeElement.focus();
    };
    /** @nocollapse */
    SliderHandleDirective.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 },
        { type: ChangeDetectorRef }
    ]; };
    SliderHandleDirective.propDecorators = {
        active: [{ type: HostBinding, args: ['class.ngx-slider-active',] }],
        role: [{ type: HostBinding, args: ['attr.role',] }],
        tabindex: [{ type: HostBinding, args: ['attr.tabindex',] }],
        ariaOrientation: [{ type: HostBinding, args: ['attr.aria-orientation',] }],
        ariaLabel: [{ type: HostBinding, args: ['attr.aria-label',] }],
        ariaLabelledBy: [{ type: HostBinding, args: ['attr.aria-labelledby',] }],
        ariaValueNow: [{ type: HostBinding, args: ['attr.aria-valuenow',] }],
        ariaValueText: [{ type: HostBinding, args: ['attr.aria-valuetext',] }],
        ariaValueMin: [{ type: HostBinding, args: ['attr.aria-valuemin',] }],
        ariaValueMax: [{ type: HostBinding, args: ['attr.aria-valuemax',] }]
    };
SliderHandleDirective.ɵfac = function SliderHandleDirective_Factory(t) { return new (t || SliderHandleDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
SliderHandleDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SliderHandleDirective, selectors: [["", "ngxSliderHandle", ""]], hostVars: 11, hostBindings: function SliderHandleDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("role", ctx.role)("tabindex", ctx.tabindex)("aria-orientation", ctx.ariaOrientation)("aria-label", ctx.ariaLabel)("aria-labelledby", ctx.ariaLabelledBy)("aria-valuenow", ctx.ariaValueNow)("aria-valuetext", ctx.ariaValueText)("aria-valuemin", ctx.ariaValueMin)("aria-valuemax", ctx.ariaValueMax);
        ɵngcc0.ɵɵclassProp("ngx-slider-active", ctx.active);
    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SliderHandleDirective, [{
        type: Directive,
        args: [{
                selector: '[ngxSliderHandle]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ChangeDetectorRef }]; }, { active: [{
            type: HostBinding,
            args: ['class.ngx-slider-active']
        }], role: [{
            type: HostBinding,
            args: ['attr.role']
        }], tabindex: [{
            type: HostBinding,
            args: ['attr.tabindex']
        }], ariaOrientation: [{
            type: HostBinding,
            args: ['attr.aria-orientation']
        }], ariaLabel: [{
            type: HostBinding,
            args: ['attr.aria-label']
        }], ariaLabelledBy: [{
            type: HostBinding,
            args: ['attr.aria-labelledby']
        }], ariaValueNow: [{
            type: HostBinding,
            args: ['attr.aria-valuenow']
        }], ariaValueText: [{
            type: HostBinding,
            args: ['attr.aria-valuetext']
        }], ariaValueMin: [{
            type: HostBinding,
            args: ['attr.aria-valuemin']
        }], ariaValueMax: [{
            type: HostBinding,
            args: ['attr.aria-valuemax']
        }] }); })();
    return SliderHandleDirective;
}(SliderElementDirective));
export { SliderHandleDirective };
if (false) {
    /** @type {?} */
    SliderHandleDirective.prototype.active;
    /** @type {?} */
    SliderHandleDirective.prototype.role;
    /** @type {?} */
    SliderHandleDirective.prototype.tabindex;
    /** @type {?} */
    SliderHandleDirective.prototype.ariaOrientation;
    /** @type {?} */
    SliderHandleDirective.prototype.ariaLabel;
    /** @type {?} */
    SliderHandleDirective.prototype.ariaLabelledBy;
    /** @type {?} */
    SliderHandleDirective.prototype.ariaValueNow;
    /** @type {?} */
    SliderHandleDirective.prototype.ariaValueText;
    /** @type {?} */
    SliderHandleDirective.prototype.ariaValueMin;
    /** @type {?} */
    SliderHandleDirective.prototype.ariaValueMax;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2xpZGVyLWhhbmRsZS5kaXJlY3RpdmUuanMiLCJzb3VyY2VzIjpbIm5nOi9AYW5ndWxhci1zbGlkZXIvbmd4LXNsaWRlci9zbGlkZXItaGFuZGxlLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakcsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7O0FBQ3BFO0FBSWMsSUFBNkIsaURBQXNCO0FBQUMsSUFtQ2hFLCtCQUFZLE9BQW1CLEVBQUUsUUFBbUIsRUFBRSxrQkFBcUM7QUFDN0YsUUFERSxZQUNFLGtCQUFNLE9BQU8sRUFBRSxRQUFRLEVBQUUsa0JBQWtCLENBQUMsU0FDN0M7QUFDSCx1QkFwQ29CLEtBQUs7QUFDekIscUJBRWlCLEVBQUU7QUFDbkIseUJBRXFCLEVBQUU7QUFDdkIsZ0NBRTRCLEVBQUU7QUFDOUIsMEJBRXNCLEVBQUU7QUFDeEIsK0JBRTJCLEVBQUU7QUFDN0IsNkJBRXlCLEVBQUU7QUFDM0IsOEJBRTBCLEVBQUU7QUFDNUIsNkJBRXlCLEVBQUU7QUFDM0IsNkJBRXlCLEVBQUU7QUFDM0I7QUFFRyxLQUtBO0FBQ0g7QUFDTTtBQUFtQjtBQUFRLElBUi9CLHFDQUFLO0FBQU87QUFDQztBQUFRLElBRHJCO0FBQWMsUUFDWixJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxLQUFLLEVBQUUsQ0FBQztBQUN2QyxLQUFHLENBakNPO0FBQUM7a0NBSFYsU0FBUyxTQUFDLHBEQUd1QjtRQUZoQyxRQUFRLEVBQUUsbEJBR29CLGdCQVBaLFVBQVU7T0FJQyxrQkFDOUIsekJBTGlDLGdCQUFGLFNBQVM7QUFBSSxnQkFBVyxpQkFBaUI7QUFBRztBQUFVO0FBQ3JELHlCQU05QixXQUFXLFNBQUMseUJBQXlCO0FBQ25DLHVCQUVGLFdBQVcsU0FBQyxXQUFXO0FBQ3JCLDJCQUVGLFdBQVcsU0FBQyxlQUFlO0FBQ3pCLGtDQUVGLFdBQVcsU0FBQyx1QkFBdUI7QUFDakMsNEJBRUYsV0FBVyxTQUFDLGlCQUFpQjtBQUMzQixpQ0FFRixXQUFXLFNBQUMsc0JBQXNCO0FBQ2hDLCtCQUVGLFdBQVcsU0FBQyxvQkFBb0I7QUFDOUIsZ0NBRUYsV0FBVyxTQUFDLHFCQUFxQjtBQUMvQiwrQkFFRixXQUFXLFNBQUMsb0JBQW9CO0FBQzlCLCtCQUVGLFdBQVcsU0FBQyxvQkFBb0I7QUFDL0I7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQUFNO0FBQUMsZ0NBbkNYO0FBQUUsRUFNeUMsc0JBQXNCO0FBQ2hFLFNBRFkscUJBQXFCO0FBQUk7QUFBYTtBQUMvQztBQUNFO0FBQ047QUFFYTtBQUVEO0FBR1o7QUFBcUI7QUFHcEI7QUFBcUI7QUFHZDtBQUFxQjtBQUduQjtBQUFxQjtBQUdqQjtBQUFxQjtBQUdsQjtBQUNoQjtBQUVvQjtBQUNoQjtBQUdFOztBQXRDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFLQSxBQUFBLEFBbUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFuQ0EsQUFBQSxBQUdBLEFBQUEsQUFHQSxBQUFBLEFBR0EsQUFBQSxBQUdBLEFBQUEsQUFHQSxBQUFBLEFBR0EsQUFBQSxBQUdBLEFBQUEsQUFHQSxBQUFBLEFBR0EsQUFBQSxBQVFBLEFBTkEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQXBDQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBTEEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBT0EsQUFBQSxBQUFBLEFBQUEsQUFHQSxBQUFBLEFBQUEsQUFBQSxBQUdBLEFBQUEsQUFBQSxBQUFBLEFBR0EsQUFBQSxBQUFBLEFBQUEsQUFHQSxBQUFBLEFBQUEsQUFBQSxBQUdBLEFBQUEsQUFBQSxBQUFBLEFBR0EsQUFBQSxBQUFBLEFBQUEsQUFHQSxBQUFBLEFBQUEsQUFBQSxBQUdBLEFBQUEsQUFBQSxBQUFBLEFBR0EsQUFBQSxBQUFBLEFBQUEsQUFsQ0EsQUFNQSxBQUFBLEFBQUEsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgRWxlbWVudFJlZiwgUmVuZGVyZXIyLCBIb3N0QmluZGluZywgQ2hhbmdlRGV0ZWN0b3JSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFNsaWRlckVsZW1lbnREaXJlY3RpdmUgfSBmcm9tICcuL3NsaWRlci1lbGVtZW50LmRpcmVjdGl2ZSc7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tuZ3hTbGlkZXJIYW5kbGVdJ1xufSlcbmV4cG9ydCBjbGFzcyBTbGlkZXJIYW5kbGVEaXJlY3RpdmUgZXh0ZW5kcyBTbGlkZXJFbGVtZW50RGlyZWN0aXZlIHtcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5uZ3gtc2xpZGVyLWFjdGl2ZScpXG4gIGFjdGl2ZTogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIEBIb3N0QmluZGluZygnYXR0ci5yb2xlJylcbiAgcm9sZTogc3RyaW5nID0gJyc7XG5cbiAgQEhvc3RCaW5kaW5nKCdhdHRyLnRhYmluZGV4JylcbiAgdGFiaW5kZXg6IHN0cmluZyA9ICcnO1xuXG4gIEBIb3N0QmluZGluZygnYXR0ci5hcmlhLW9yaWVudGF0aW9uJylcbiAgYXJpYU9yaWVudGF0aW9uOiBzdHJpbmcgPSAnJztcblxuICBASG9zdEJpbmRpbmcoJ2F0dHIuYXJpYS1sYWJlbCcpXG4gIGFyaWFMYWJlbDogc3RyaW5nID0gJyc7XG5cbiAgQEhvc3RCaW5kaW5nKCdhdHRyLmFyaWEtbGFiZWxsZWRieScpXG4gIGFyaWFMYWJlbGxlZEJ5OiBzdHJpbmcgPSAnJztcblxuICBASG9zdEJpbmRpbmcoJ2F0dHIuYXJpYS12YWx1ZW5vdycpXG4gIGFyaWFWYWx1ZU5vdzogc3RyaW5nID0gJyc7XG5cbiAgQEhvc3RCaW5kaW5nKCdhdHRyLmFyaWEtdmFsdWV0ZXh0JylcbiAgYXJpYVZhbHVlVGV4dDogc3RyaW5nID0gJyc7XG5cbiAgQEhvc3RCaW5kaW5nKCdhdHRyLmFyaWEtdmFsdWVtaW4nKVxuICBhcmlhVmFsdWVNaW46IHN0cmluZyA9ICcnO1xuXG4gIEBIb3N0QmluZGluZygnYXR0ci5hcmlhLXZhbHVlbWF4JylcbiAgYXJpYVZhbHVlTWF4OiBzdHJpbmcgPSAnJztcblxuICBmb2N1cygpOiB2b2lkIHtcbiAgICB0aGlzLmVsZW1SZWYubmF0aXZlRWxlbWVudC5mb2N1cygpO1xuICB9XG5cbiAgY29uc3RydWN0b3IoZWxlbVJlZjogRWxlbWVudFJlZiwgcmVuZGVyZXI6IFJlbmRlcmVyMiwgY2hhbmdlRGV0ZWN0aW9uUmVmOiBDaGFuZ2VEZXRlY3RvclJlZikge1xuICAgIHN1cGVyKGVsZW1SZWYsIHJlbmRlcmVyLCBjaGFuZ2VEZXRlY3Rpb25SZWYpO1xuICB9XG59XG4iXX0=